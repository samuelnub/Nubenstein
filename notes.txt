18 Nov 2016
Places rooms down, each successive room has an x and y coordinate that is still going to 
be reachable to the previous room with a straight line, and hallways will also be placed 
down in the process, connecting all the rooms together in a "semi-random looking way"

19 Nov 2016
Uh, sloppy wall and door placement, will try to make it produce more visually appealing 
results. maybe by placing these walls before we finish room creation

20 Nov 2016
Ohh cool, you could achieve "layered" rendering with multiple scenes 
https://github.com/mrdoob/three.js/issues/1959

21 Nov 2016
"Procedural bricks" lol, colloquially known as "doing the easiest thing you can imagine, 
and adding some minor variation"
If you wanna merge meshes:
http://jsfiddle.net/L0rdzbej/16/
take note of that MeshFaceMaterial for multiple materials!
and also this question in regards to buffere'd geometry and textures:
http://stackoverflow.com/questions/24961952/three-js-buffergeometry-and-textures

22 Nov 2016
input listeners and getters when you need 'em
also just a tiny bit of css to make it centre aligned

23 Nov 2016
refactored a bit to make it less sprawled with gunk around the more "global namespace"
Player class will handle the "you" definition within the game, in terms of moving and
interacting
hey look, its that cool guy i got the C++ opengl quaternion implementation from:
http://hamelot.io/visualization/three-js-quaternion-camera/

24 Nov 2016
TIL of the "self" hack to get around js's - uh, let's just say, 'interesting' way of
handling the "this" context
well, i could use es6's arrow functions and using bind, but really? I just need it to work
https://threejs.org/docs/#Reference/Core/Object3D
in case you need to reference the docs. the lack of proper intellisense for libraries is
sad, but kinda unavoidable

25 Nov 2016
transformer helper class, will contain checks for collisions in the future
http://stackoverflow.com/questions/11119753/how-to-rotate-a-object-on-axis-world-three-js
